{
	"name": "dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "TelemetryDS",
						"type": "DatasetReference"
					},
					"name": "Telemetry"
				},
				{
					"dataset": {
						"referenceName": "FailuresDS",
						"type": "DatasetReference"
					},
					"name": "Failures"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Failures",
						"type": "DatasetReference"
					},
					"name": "SQLSink"
				},
				{
					"dataset": {
						"referenceName": "Output",
						"type": "DatasetReference"
					},
					"name": "DoPliku",
					"rejectedDataLinkedService": {
						"referenceName": "Blob1",
						"type": "LinkedServiceReference"
					}
				},
				{
					"dataset": {
						"referenceName": "AzureSQL",
						"type": "DatasetReference"
					},
					"name": "SQLSinkDatetime2"
				}
			],
			"transformations": [
				{
					"name": "kolumnyDatetimeMachineid"
				},
				{
					"name": "FailuresPivot"
				},
				{
					"name": "LeftJoin"
				},
				{
					"name": "KolumnyDatetime"
				},
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				}
			],
			"scriptLines": [
				"source(output(",
				"          datetime as timestamp,",
				"          machineID as short,",
				"          volt as double,",
				"          rotate as double,",
				"          pressure as double,",
				"          vibration as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Telemetry",
				"source(output(",
				"          datetime as timestamp,",
				"          machineID as short,",
				"          failure as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Failures",
				"Telemetry select(mapColumn(",
				"          datetime,",
				"          machineID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> kolumnyDatetimeMachineid",
				"Failures pivot(groupBy(datetime,",
				"          machineID),",
				"     pivotBy(failure),",
				"     {} = count(failure),",
				"     columnNaming: '$N$V',",
				"     lateral: true) ~> FailuresPivot",
				"kolumnyDatetimeMachineid, MapDrifted1 join(kolumnyDatetimeMachineid@datetime == FailuresPivot@datetime",
				"     && kolumnyDatetimeMachineid@machineID == FailuresPivot@machineID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftJoin",
				"LeftJoin select(mapColumn(",
				"          datetime = kolumnyDatetimeMachineid@datetime,",
				"          machineID = kolumnyDatetimeMachineid@machineID,",
				"          comp1,",
				"          comp2,",
				"          comp3,",
				"          comp4",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> KolumnyDatetime",
				"FailuresPivot derive(comp1 = toLong(byName('comp1')),",
				"          comp2 = toLong(byName('comp2')),",
				"          comp3 = toLong(byName('comp3')),",
				"          comp4 = toLong(byName('comp4'))) ~> MapDrifted1",
				"KolumnyDatetime sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          datetime,",
				"          machineID,",
				"          comp1,",
				"          comp2,",
				"          comp3,",
				"          comp4",
				"     )) ~> SQLSink",
				"KolumnyDatetime sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DoPliku",
				"KolumnyDatetime sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SQLSinkDatetime2"
			]
		}
	}
}