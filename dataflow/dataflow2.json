{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "TelemetryDS",
						"type": "DatasetReference"
					},
					"name": "Telemetry",
					"description": "plik danych telemetrii (maly)"
				},
				{
					"dataset": {
						"referenceName": "ErrorsDS",
						"type": "DatasetReference"
					},
					"name": "Errors"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "ErrorsToColumns"
				},
				{
					"name": "join1"
				},
				{
					"name": "Wyborkolumn"
				},
				{
					"name": "window3h"
				},
				{
					"name": "window24h"
				}
			],
			"scriptLines": [
				"source(output(",
				"          datetime as timestamp,",
				"          machineID as short,",
				"          volt as double,",
				"          rotate as double,",
				"          pressure as double,",
				"          vibration as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Telemetry",
				"source(output(",
				"          datetime as timestamp,",
				"          machineID as short,",
				"          errorID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Errors",
				"Errors pivot(groupBy(datetime,",
				"          machineID),",
				"     pivotBy(errorID),",
				"     sumaWystapien = count(errorID),",
				"     columnNaming: '$N_$V',",
				"     lateral: false) ~> ErrorsToColumns",
				"Telemetry, ErrorsToColumns join(Telemetry@datetime == ErrorsToColumns@datetime",
				"     && Telemetry@machineID == ErrorsToColumns@machineID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          datetime = Telemetry@datetime,",
				"          machineID = Telemetry@machineID,",
				"          volt,",
				"          rotate,",
				"          pressure,",
				"          vibration,",
				"          datetime = ErrorsToColumns@datetime,",
				"          machineID = ErrorsToColumns@machineID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Wyborkolumn",
				"Wyborkolumn window(asc(datetime, true),",
				"     startRowOffset: -3L,",
				"     endRowOffset: 0L,",
				"     mean_rotate_3h = mean(rotate),",
				"          mean_pressure_3h = mean(pressure),",
				"          mean_vibration_3h = mean(vibration),",
				"          mean_volt_3h = mean(volt),",
				"          stddev_volt_3h = stddev(volt),",
				"     rangeSpecified: true) ~> window3h",
				"window3h window(asc(datetime, true),",
				"     rangeSpecified: true,",
				"     startRowOffset: -24L,",
				"     endRowOffset: 0L,",
				"     mean_rotate_24h = mean(rotate),",
				"          mean_volt_24h = mean(volt)) ~> window24h"
			]
		}
	}
}